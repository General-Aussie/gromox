// SPDX-License-Identifier: AGPL-3.0-or-later
// SPDX-FileCopyrightText: 2021 grommunio GmbH
// This file is part of Gromox.
#ifdef HAVE_CONFIG_H
#	include "config.h"
#endif
#include <cstdint>
#include <cstdlib>
#if __linux__ && defined(HAVE_SYS_RANDOM_H)
#	include <sys/random.h>
#endif
#include <gromox/mapidefs.h>
#include <gromox/guid.hpp>

const FLATUID muidStoreWrap =
	/* {10bba138-e505-1a10-a1bb-08002b2a56c2} */
	{0x38, 0xA1, 0xBB, 0x10, 0x05, 0xE5, 0x10, 0x1A,
	0xA1, 0xBB, 0x08, 0x00, 0x2B, 0x2A, 0x56, 0xC2};
const FLATUID g_muidStorePrivate =
	/* {20fa551b-66aa-cd11-9bc8-00aa002fc45a} */
	{0x1B, 0x55, 0xFA, 0x20, 0xAA, 0x66, 0x11, 0xCD,
	0x9B, 0xC8, 0x00, 0xAA, 0x00, 0x2F, 0xC4, 0x5A};
const FLATUID g_muidStorePublic =
	/* {1002831c-66aa-cd11-9bc8-00aa002fc45a} */
	{0x1C, 0x83, 0x02, 0x10, 0xAA, 0x66, 0x11, 0xCD,
	0x9B, 0xC8, 0x00, 0xAA, 0x00, 0x2F, 0xC4, 0x5A};
const FLATUID muidEMSAB =
	/* {c840a7dc-42c0-1a10-b4b9-08002b2fe182} */
	{0xDC, 0xA7, 0x40, 0xC8, 0xC0, 0x42, 0x10, 0x1A,
	0xB4, 0xB9, 0x08, 0x00, 0x2B, 0x2F, 0xE1, 0x82};
const FLATUID pbLongTermNonPrivateGuid =
	/* {9073441a-66aa-cd11-9bc8-00aa002fc45a} */
	{0x1A, 0x44, 0x73, 0x90, 0xAA, 0x66, 0x11, 0xCD,
	0x9B, 0xC8, 0x00, 0xAA, 0x00, 0x2F, 0xC4, 0x5A};
const FLATUID muidOOP =
	/* {a41f2b81-a3be-1910-9d6e-00dd010f5402} */
	{0x81, 0x2B, 0x1F, 0xA4, 0xBE, 0xA3, 0x10, 0x19,
	0x9D, 0x6E, 0x00, 0xDD, 0x01, 0x0F, 0x54, 0x02};
const FLATUID muidECSAB =
	/* {50a921ac-d340-48ee-b319-fba753304425} */
	/* (ZARAFA6 provider ID (GAB)) */
	{0xAC, 0x21, 0xA9, 0x50, 0x40, 0xD3, 0xEE, 0x48,
	0xB3, 0x19, 0xFB, 0xA7, 0x53, 0x30, 0x44, 0x25};
const FLATUID muidZCSAB =
	/* {30047f72-92e3-da4f-b86a-e52a7fe46571} */
	/* (ZCONTACTS provider ID (PAB)) */
	{0x72, 0x7F, 0x04, 0x30, 0xE3, 0x92, 0x4F, 0xDA,
	0xB8, 0x6A, 0xE5, 0x2A, 0x7F, 0xE4, 0x65, 0x71};
const FLATUID EncodedGlobalId =
	/* MS-OXCICAL v13 ยง2.1.3.1.1.20.26 pg 67 */
	/* {00000004-0082-00e0-74c5-b7101a82e008} */
	{0x04, 0x00, 0x00, 0x00, 0x82, 0x00, 0xE0, 0x00,
	0x74, 0xC5, 0xB7, 0x10, 0x1A, 0x82, 0xE0, 0x08};
const FLATUID IID_IStorage =
	/* {0000000b-0000-0000-c000-000000000046} */
	{0x0B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46};
const FLATUID IID_IStream =
	/* {0000000c-0000-0000-c000-000000000046} */
	{0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46};
const FLATUID IID_IMessage =
	/* {00020307-0000-0000-c000-000000000046} */
	{0x07, 0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46};
const FLATUID IID_IExchangeExportChanges =
	/* {a3ea9cc0-d1b2-11cd-80fc-00aa004bba0b} */
	{0xC0, 0x9C, 0xEA, 0xA3, 0xB2, 0xD1, 0xCD, 0x11,
	0x80, 0xFC, 0x00, 0xAA, 0x00, 0x4B, 0xBA, 0x0B};
const FLATUID IID_IExchangeImportContentsChanges =
	/* {f75abfa0-d0e0-11cd-80fc-00aa004bba0b} */
	{0xA0, 0xBF, 0x5A, 0xF7, 0xE0, 0xD0, 0xCD, 0x11,
	0x80, 0xFC, 0x00, 0xAA, 0x00, 0x4B, 0xBA, 0x0B};
const FLATUID IID_IExchangeImportHierarchyChanges =
	/* {85a66cf0-d0e0-11cd-80fc-00aa004bba0b} */
	{0xF0, 0x6C, 0xA6, 0x85, 0xE0, 0xD0, 0xCD, 0x11,
	0x80, 0xFC, 0x00, 0xAA, 0x00, 0x4B, 0xBA, 0x0B};
const uint8_t MACBINARY_ENCODING[9] =
	{0x2A, 0x86, 0x48, 0x86, 0xF7, 0x14, 0x03, 0x0B, 0x01};
const uint8_t OLE_TAG[11] =
	{0x2A, 0x86, 0x48, 0x86, 0xF7, 0x14, 0x03, 0x0A,
	0x03, 0x02, 0x01};
const uint8_t ThirdPartyGlobalId[12] =
	/* pg 68 // 7643616C2D55696401000000 */
	{0x76, 0x43, 0x61, 0x6c, 0x2d, 0x55, 0x69, 0x64, 0x01, 0x00, 0x00, 0x00};

namespace gromox {

GUID guid_random_new()
{
	GUID guid;
#if __linux__ && defined(HAVE_SYS_RANDOM_H)
	if (getrandom(&guid, sizeof(guid), 0) != sizeof(guid)) {
	} else
#endif
	{
		int32_t v[4] = {rand(), rand(), rand(), rand()};
		static_assert(sizeof(v) == sizeof(guid));
		memcpy(&guid, v, sizeof(guid));
	}
	/* RFC 4122 pg 24 */
	guid.clock_seq[0] &= 0x3F;
	guid.clock_seq[0] |= 0x80;
	guid.time_hi_and_version &= 0x0FFF;
	guid.time_hi_and_version |= 4U << 12;
	return guid;
}

}
